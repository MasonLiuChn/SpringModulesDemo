<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.example</groupId>
		<artifactId>root</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../</relativePath> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>web</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>web</name>
	<description>Demo project for Spring Boot</description>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--引用springboot-utils项目
		   1、直接运行 main方法时：先到 module的 target文件夹内找 才会到 maven仓库找 -->
		<dependency>
			<groupId>com.example</groupId>
			<artifactId>utils</artifactId>
			<version>${module-web.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- 该plugin 会hook mvn package 任务 添加入口函数、主清单属性
					 该plugin 会将所有依赖的jar 打包成一个jar
				     该插件只需要放在 spring boot module中-->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
